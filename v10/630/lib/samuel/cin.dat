cin_argc	int cin_argc; number of arguments passed to cin
cin_argv	char *cin_argv[]; arguments passed to cin
cin_break	int cin_break(fn, n) char *fn; int n; set a breakpoint at line n in function fn
cin_dump	int cin_dump(file) char *file; create an executable in file
cin_eval	enode *cin_eval(e) enode *e; execute code
cin_filename	char *cin_filename; current C source filename being executed
cin_find_ident	ident *cin_find_ident(id) char *id; search for id in current view
cin_info	void cin_info(s) char *s; give information about current program
cin_level	int cin_level; the number of nested breakpoints
cin_libpath	char *cin_libpath; a list of libraries to search for undefined routines
cin_lineno	int cin_lineno; the current C source line number being executed
cin_load	int cin_load(s) char *s; evaluate s as invocation arguments of cin
cin_log	int cin_log(file) char *file; record the interactive mode session in file
cin_ltof	char *cin_ltof(n) int n; return the function name at line n
cin_print	enode *cin_print(e) enode *e; print e as C code
cin_prompt	char *cin_prompt; the interactive mode prompt (default "cin")
cin_quit	void cin_quit() exit cin
cin_read	enode *cin_read(s) char *s; read s and return program
cin_reset	int cin_reset() restore initialized data and bss to original values
cin_return	void cin_return() return from a breakpoint
cin_spy	int cin_spy(fn, id, mod, ref) char *fn, *id; int (*mod)(), (*ref)();
cin_spy	call function mod (ref) when id is modified (referenced) in function fn
cin_stack	stackelem *cin_stack; <stack.h> the trace of subroutine calls
cin_system	void cin_system() enter interactive mode
cin_unbreak	int cin_unbreak(fn, n) char *fn; int n; remove a breakpoint at line n in function fn
cin_unload	int cin_unload(s) char *s; unload file s
cin_unspy	int cin_unspy(fn, name, mod, ref) remove spy on name in function fn
cin_unspy	(see cin_spy)
cin_unwrapper	int cin_unwrapper(fn, bf, af) char *fn; int (*bf)(), (*af)();
cin_unwrapper	remove wrapper on function fn
cin_view	int cin_view(s) char *s; change current view to s
cin_views	view *cin_views; <symtab.h> the list of available views
cin_wrapper	int cin_wrapper(fn, bf, af) char *fn; int (*bf)(), (*af)();
cin_wrapper	call function before (after) before (after) subroutine name is called
