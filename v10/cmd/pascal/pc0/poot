8 or 9 in octal number
Number too large for this implementation
Not enough arguments to %s
Expression given (variable required) for var parameter %s of %s
Parameter type not identical to type of var parameter %s of %s
Expression type clashed with type of value parameter %s of %s
Too many arguments to %s
%s %s declared on line %d has more arguments than
%s %s declared on line %d
%s parameter %s of %s declared on line %d is not identical
with %s parameter %s of %s declared on line %d
Type of %s parameter %s of %s declared on line %d is not identical
to type of %s parameter %s of %s declared on line %d
%s %s declared on line %d has fewer arguments than
Case selectors cannot be %ss
Ran out of memory (case)
Case label type clashed with case selector expression type
Case label out of range
Multiply defined label in case, lines %d and %d
Oct/hex allowed only on writeln/write calls
Width expressions allowed only in writeln/write calls
Constant declarations should precede type, var and routine declarations
All constants should be declared in one const part
%s is a %s, not a constant as required
Constant too large for this implementation
%s constants cannot be signed
Type clash: real is incompatible with integer
This resulted because you used '/' which always returns real rather
than 'div' which divides integers and returns integers
Type clash: non-identical scalar types
Type clash: unequal length strings
Type clash: files not allowed in this context
Type clash: non-identical %s types
Type clash: %ss with file components not allowed in this context
Type clash: %s is incompatible with %s
Constant set involved in non set context
Set default type "intset" is not a set
Sets may not have 'real' elements
Set elements must be scalars, not %ss
Range upper bound of %D out of set bounds
Upper bound of element type clashed with set type in constant set
Range lower bound of %D out of set bounds
Lower bound of element type clashed with set type in constant set
Value of %D out of set bounds
Element type clashed with set type in constant set
External procedures and functions are not standard
External procedures and functions can only be declared at the outermost level.
Procedures or functions cannot be declared external.
Too many levels of function/procedure nesting
Separately compiled routine segments are not standard.
%s undefined on line%s
%s improperly used on line%s
Unresolved forward declaration of %s %s
No assignment to the function variable
Missing program statement and program body
Missing program statement
File %s listed in program statement but not declared
File %s listed in program statement but declared as a %s
File %s listed in program statement but defined as %s
The file output must appear in the program statement file list
Input is used but not defined in the program statement
%s %s is neither used nor set
%s %s is never used
%s %s is used but never set
label %s was declared but not defined
Function type should be given only in forward declaration
Procedures do not have types, only functions do
Function type must be specified
Function type can be specified only by using a type identifier
Functions should not return %ss
Procedure/function nesting too deep
Types must be specified for arguments
Procedures cannot have types
Types for arguments can be specified only by using type identifiers
Files cannot be passed by value
Files cannot be a component of %ss passed by value
Each function argument must be declared separately
Each procedure argument must be declared separately
Expression given, %s required for %s parameter %s
Formal %s %s cannot be qualified
%s %s cannot be qualified
Built-in %s %s cannot be passed as a parameter
Variable given, %s required for %s parameter %s
For variable %s must be unqualified
For variable %s cannot be an element of a record
For variable %s must be declared in the block in which it is used
For variable %s cannot be %ss
Can't modify the for variable %s in the range of the loop
Type of initial expression clashed with index type in 'for' statement
Type of limit expression clashed with index type in 'for' statement
%s is not a function
%s is a nonstandard function
%s takes no arguments
%s takes either zero or one argument
%s takes exactly one argument
%s's argument must be integer or real, not %s
seed's argument must be an integer, not %s
%s's argument must be a real, not %s
%s's argument must be an integer or real, not %s
ord's argument must be of scalar type or a pointer, not %s
%s is forbidden for reals
%s's argument must be of scalar type, not %s
odd's argument must be an integer, not %s
chr's argument must be an integer, not %s
Argument to card must be a set, not %s
Argument to eoln must be a text file, not %s
Argument to eof must be file, not %s
%s is an unimplemented 6000-3.4 extension
Ran out of memory (hash)
Ran out of hash tables
Label declarations should precede const, type, var and routine declarations
All labels should be declared in one label part
Goto %s is into a structured statement
Label %s not defined in correct block
Label %s redefined
Goto %s from line %d is into a structured statement
%s is undefined
Variable required
%s %s found where variable required
^ allowed only on files and pointers, not on %ss
%s is a %s, not a function
Illegal function qualificiation
Pascal uses [] for subscripting, not ()
Subscripting allowed only on arrays, not on %ss
. allowed only on records, not on %ss
%s is not a field in this record
Error occurred on qualification of %s
Too few subscripts (%d given, %d required)
Subscript value of %D is out of range
Array index type incompatible with declared index type
Error occurred on index number %d
Too many subscripts (%d given, %d required)
Ran out of memory (defnl)
Ran out of name list tables
Pre-defined files input and output must not be redefined
%s is already defined in this block
Can't call %s, its %s not a procedure
%s is a nonstandard procedure
null takes no arguments
flush takes at most one argument
flush's argument must be a file, not %s
Writing %ss with two write widths is non-standard
Cannot write %ss with two write widths
Negative widths are not allowed
Zero widths are non-standard
Oct/hex allowed only on text files
Write widths allowed only on text files
Type mismatch in write to non-text file
Oct and hex are non-standard
Can't write %ss with oct/hex
Writing scalars to text files is non-standard
Can't write %ss to a text file
Second write width must be integer, not %s
First write width must be integer, not %s
Write requires an argument
Message requires an argument
Can't 'writeln' a non text file
Arguments to %s must be variables, not expressions
Type mismatch in read from non-text file
Can't read %ss from a text file
Reading scalars from text files is non-standard
Can't 'readln' a non text file
read requires an argument
%s expects one argument
Argument to %s must be a file, not %s
%s expects one or two arguments
Two argument forms of reset and rewrite are non-standard
First argument to %s must be a file, not %s
Second argument to %s must be a string, not %s
%s expects at least one argument
(First) argument to %s must be a pointer, not %s
Record required when specifying variant tags
Too many tag fields
Second and successive arguments to %s must be constants
Specified tag constant type clashed with variant case selector type
No variant case label value equals specified constant value
Argument to %s must be a alfa, not %s
halt takes no arguments
argv takes two arguments
argv's first argument must be an integer, not %s
argv's second argument must be a string, not %s
stlimit requires one argument
stlimit's argument must be an integer, not %s
remove expects one argument
remove's argument must be a string, not %s
linelimit expects two arguments
linelimit's second argument must be an integer, not %s
linelimit's first argument must be a text file, not %s
page expects one argument
Argument to page must be a text file, not %s
pack expects three arguments
unpack expects three arguments
%s requires a to be an unpacked array, not %s
%s requires z to be a packed array, not %s
%s requires a and z to be arrays of the same type
%s requires a and z to be single dimension arrays
%s cannot have more elements in a (%d) than in z (%d)
%s is an unimplemented 6400 extension
Tag fields cannot be %ss
%s is a duplicate field name in this record
Variant label type incompatible with selector type
Duplicate variant case label in record
%s is a constant and cannot be qualified
Constant string too long
Can't qualify a function result value
Type names (e.g. %s) allowed only in declarations
Procedure %s found where expression required
Operand of %s must be integer or real, not %s
not must operate on a Boolean, not %s
Left operand of %s must be Boolean, not %s
Right operand of %s must be Boolean, not %s
Left operand of / must be integer or real, not %s
Right operand of / must be integer or real, not %s
Set types of operands of %s must be identical
Left operand of %s must be integer, real or set, not %s
Right operand of %s must be integer, real or set, not %s
Cannot mix sets with integers and reals as operands of %s
Left operand of %s must be integer, not %s
Right operand of %s must be integer, not %s
%s comparison on sets is non-standard
%s not allowed on records - only allow = and <>
%s not allowed on pointers - only allow = and <>
Strings not same length in %s comparison
%ss and %ss cannot be compared - operator was %s
%s types must be identical in comparisons - operator was %s
Right operand of 'in' must be a set, not %s
Index type clashed with set component type for 'in'
record comparison is non-standard
%ss may not participate in comparisons
Unreachable statement
Variable in with statement refers to %s, not to a record
Type of expression clashed with type of variable in assignment
Type of expression in if statement must be Boolean, not %s
Type of expression in while statement must be Boolean, not %s
Until expression type must be Boolean, not %s, in repeat statement
Assert statement is non-standard
Assert expression must be Boolean, not %ss
Ran out of memory (string)
Ran out of memory (tralloc)
Ran out of tree tables
Type declarations should precede var and routine declarations
All types should be declared in one type part
%s is a %s, not a type as required
Files cannot be members of files
Set of real is not allowed
Set type must be range or scalar, not %s
Implementation restriction: sets must be indexed by 16 bit quantities
Storage requirement of %s exceeds the implementation limit of %D by %D bytes
Can't mix %ss and %ss in subranges
Scalar types must be identical in subranges
Range lower bound exceeds upper bound
Subrange of real is not allowed
Subrange bounds must be Boolean, character, integer or scalar, not %s
Index type for arrays cannot be real
Array index type is a %s, not a range or scalar as required
Value of dimension specifier too large or small for this implementation
Files cannot be members of dynamic structures
Variable declarations should precede routine declarations
All variables should be declared in one var part
Malformed program statement
Malformed declaration
Malformed const declaration
Malformed type declaration
Malformed var declaration
Malformed record declaration
Deleted ';' before keyword else
Malformed statement in case
Malformed statement
Missing/malformed expression
Too many syntax errors - QUIT
End matched %s on line %d
Inserted keyword end matching %s on line %d
Input line too long - QUIT
Include syntax error - expected ' or " not found - QUIT
Missing closing %c for include file name - QUIT
Garbage after filename in include
Include filename must end in .i or .h
Absurdly deep include nesting - QUIT
Ran out of memory (include)
Octal constants are non-standard
Digits required after decimal point
Digits required in exponent
Character/string delimiter is '
Unmatched %c for string
Null string not allowed
Digits required before decimal point
{ in a { ... } comment
Comment does not terminate - QUIT
(* in a (* ... *) comment
Illegal character
Declaration found when statement expected
Expected keyword begin after declarations, before statements
Parsing resumes
Parse stack overflow
Unrecoverable syntax error - QUIT
Point of error
Undefined identifier
Improper %s identifier
Deleted %s%s
Replaced %s%s with a %s%s
Inserted %s%s
Expected %s%s
Undefined %s
Replaced %s id with a %s id
End-of-file expected - QUIT
Unexpected end-of-file - QUIT
Too many 'others' cases; only one allowed
